(()=>{"use strict";var t;!function(t){t.Active="active",t.Finished="finished"}(t||(t={}));var e=function(t,e,n,r,o){this.id=t,this.title=e,this.description=n,this.people=r,this.status=o};const n=function(){function t(t,e,n,r){this.templateElement=document.getElementById(t),this.hostElement=document.getElementById(e),this.hostPosition=n;var o=document.importNode(this.templateElement.content,!0);this.element=o.firstElementChild,r&&(this.element.id=r),this.attach()}return t.prototype.attach=function(){this.hostElement.insertAdjacentElement(this.hostPosition,this.element)},t}();function r(t,e,n){return{configurable:!0,enumerable:!1,get:function(){return n.value.bind(this)}}}function o(t){return!(t.required&&0===t.value.toString().trim().length||null!=t.minLength&&"string"==typeof t.value&&t.value.trim().length<t.minLength||null!=t.maxLength&&"string"==typeof t.value&&t.value.trim().length>t.maxLength||null!=t.minVal&&"number"==typeof t.value&&t.value<t.minVal||null!=t.maxVal&&"number"==typeof t.value&&t.value>t.maxVal)}var i,a=(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),s=function(n){function r(){var t=n.call(this)||this;return t.projects=[],t}return a(r,n),r.getInstance=function(){return this.instance||(this.instance=new r),this.instance},r.prototype.addProject=function(n,r,o,i){var a=new e(Math.random().toString(),n,r,o,i||t.Active);this.projects.push(a),this.publishChanges()},r.prototype.publishChanges=function(){for(var t=0,e=this.listeners;t<e.length;t++)(0,e[t])(this.projects.slice())},r.prototype.updateProjectStatus=function(t,e){var n=this.projects.find((function(e){return e.id===t}));n&&n.status!==e&&(n.status=e,this.publishChanges())},r}(function(){function t(){this.listeners=[]}return t.prototype.addListener=function(t){this.listeners.push(t)},t}()).getInstance(),c=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),u=function(t){function e(){var e=t.call(this,"project-input","app","afterbegin","user-input")||this;return e.titleInput=e.element.querySelector("#title"),e.descriptionInput=e.element.querySelector("#description"),e.peopleInput=e.element.querySelector("#people"),e.configure(),e}return c(e,t),e.prototype.renderContent=function(){},e.prototype.configure=function(){this.element.addEventListener("submit",this.submitHandler)},e.prototype.submitHandler=function(t){t.preventDefault();var e=this.gatherInputData();if(e){var n=e[0],r=e[1],o=e[2];s.addProject(n,r,o),this.resetForm()}},e.prototype.gatherInputData=function(){var t=this.titleInput.value,e=this.descriptionInput.value,n=this.peopleInput.value;if(o({value:t,required:!0})&&o({value:e,required:!0})&&o({value:+n,minVal:1,maxVal:10}))return[t,e,+n];alert("Invalid project. Please try again")},e.prototype.resetForm=function(){this.titleInput.value="",this.descriptionInput.value="",this.peopleInput.value=""},function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);i>3&&a&&Object.defineProperty(e,n,a)}([r],e.prototype,"submitHandler",null),e}(n),l=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),p=function(t){function e(e,n){var r=t.call(this,"single-project",e,"beforeend")||this;return r.project=n,r.renderContent(),r.configure(),r}return l(e,t),Object.defineProperty(e.prototype,"contributors",{get:function(){return this.project.people+" contributor"+(1===this.project.people?"":"s")},enumerable:!1,configurable:!0}),e.prototype.configure=function(){this.element.addEventListener("dragstart",this.dragStartHandler),this.element.addEventListener("dragend",this.dragEndHandler)},e.prototype.renderContent=function(){this.element.querySelector("h2").textContent=this.project.title,this.element.querySelector("h3").textContent=this.contributors,this.element.querySelector("p").textContent=this.project.description},e.prototype.dragStartHandler=function(t){t.dataTransfer.setData("text/plain",this.project.id),t.dataTransfer.effectAllowed="move"},e.prototype.dragEndHandler=function(t){},function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);i>3&&a&&Object.defineProperty(e,n,a)}([r],e.prototype,"dragStartHandler",null),e}(n),f=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),d=function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a},h=function(t){function e(e){var n=t.call(this,"project-list","app","beforeend",e+"-projects")||this;return n.status=e,n.assignedProjects=[],n.renderContent(),n.configure(),n}return f(e,t),e.prototype.configure=function(){s.addListener(this.handleProjectAdded),this.element.addEventListener("dragover",this.dragOverHandler),this.element.addEventListener("dragleave",this.dragLeaveHandler),this.element.addEventListener("drop",this.dropHandler)},e.prototype.renderContent=function(){var t=this.status+"-projects-list";this.element.querySelector("ul").id=t;var e=this.status.toUpperCase()+" PROJECTS";this.element.querySelector("h2").textContent=e},e.prototype.handleProjectAdded=function(t){var e=this;this.assignedProjects=t.filter((function(t){return t.status===e.status})),this.renderProjects()},e.prototype.renderProjects=function(){var t=this.status+"-projects-list";document.getElementById(t).innerHTML="";for(var e=0,n=this.assignedProjects;e<n.length;e++){var r=n[e];new p(t,r)}},e.prototype.dragOverHandler=function(t){t.dataTransfer&&"text/plain"===t.dataTransfer.types[0]&&(t.preventDefault(),this.element.querySelector("ul").classList.add("droppable"))},e.prototype.dropHandler=function(t){t.preventDefault();var e=t.dataTransfer.getData("text/plain");s.updateProjectStatus(e,this.status)},e.prototype.dragLeaveHandler=function(t){this.element.querySelector("ul").classList.remove("droppable")},d([r],e.prototype,"handleProjectAdded",null),d([r],e.prototype,"dragOverHandler",null),d([r],e.prototype,"dropHandler",null),d([r],e.prototype,"dragLeaveHandler",null),e}(n);new u,new h(t.Active),new h(t.Finished)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,